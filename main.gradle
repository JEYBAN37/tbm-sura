subprojects {
    apply plugin: "java"
    apply plugin: "java-library"
    apply plugin: "jacoco"
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = JavaVersion.VERSION_17

    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }

    dependencies {
        testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
        testImplementation "io.projectreactor:reactor-test"
        testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
        testRuntimeOnly    "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"

        implementation "io.projectreactor:reactor-core"
        implementation "io.projectreactor.addons:reactor-extra"

        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        testCompileOnly "org.projectlombok:lombok:${lombokVersion}"

        implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.2.0'

        implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
        implementation 'org.apache.tika:tika-core:2.4.0'
        implementation "org.springframework.boot:spring-boot-starter-data-redis-reactive:${springBootVersion}"
        implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
    }


    test {
        useJUnitPlatform()
    }

    jacoco {
        toolVersion = '0.8.8'
    }

    jacocoTestReport {
        dependsOn test
    }

    test.finalizedBy(project.tasks.jacocoTestReport)

    jacocoTestReport {
        dependsOn test
        reports {
            xml.required.set(true)
            xml.outputLocation.set(file("${buildDir}/reports/jacoco.xml"))
            csv.required.set(false)
            html.outputLocation.set(file("${buildDir}/reports/jacocoHtml"))
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "org.springframework:spring-framework-bom:${springFrameworkVersion}"
            mavenBom "io.projectreactor:reactor-bom:${reactorVersion}"
        }
    }
}

